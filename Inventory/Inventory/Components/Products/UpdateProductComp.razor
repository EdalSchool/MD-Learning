@using Entities
@using Business
@inject NavigationManager NavManager

<title>Manew | @oProduct.ProductName Product Edition</title>

<h4><a class="" href=""><i class="text-danger fa-solid fa-angle-left"></i></a> Editing @oProduct.ProductName</h4>
<EditForm Model="oProduct" OnValidSubmit=@UpdateProduct>
    <DataAnnotationsValidator />

    <div class="form-group">
        <h6>Name</h6>
        <InputText class="form-control" @bind-Value="oProduct.ProductName" placeholder="Product name" />
        <ValidationMessage For="() => oProduct.ProductName" />
    </div>
    <br />
    <div class="form-group">
        <h6>Description</h6>
        <InputTextArea class="form-control" @bind-Value="oProduct.ProductDescription" placeholder="Product description" />
    </div>
    <br />
    <button type="submit" class="savebtn btn"><i style="padding-right: 4px;" class="text-success fa-solid fa-check"></i> Save</button>
    <a href="" class="cancelbtn btn"><i style="padding-right: 4px;" class="text-danger fa-solid fa-xmark"></i> Cancel</a>
</EditForm>

@code {
    [Parameter]
    public string IdProduct { get; set; }

    Product oProduct = new Product();
    List<Category> categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        categories = BsCategory.CategoryList();
        oProduct = BsProduct.ProductById(IdProduct);
    }

    private void UpdateProduct()
    {
        BsProduct.ProductUpdate(oProduct);
        NavManager.NavigateTo("");
    }
}

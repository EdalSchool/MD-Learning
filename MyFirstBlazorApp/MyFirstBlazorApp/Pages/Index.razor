@page "/"

@using Entities
@using Business

<title>Manew | Products</title>

<style>
    body {
        margin: 0;
        font-family: 'Quicksand', sans-serif;
    }

    .my-order {
        width: 100%;
        margin-top: 100px;
        display: grid;
        place-items: center;
    }

    .my-order-container {
        display: grid;
        grid-template-rows: auto 1fr auto;
        width: 400px;
    }

    .title {
        margin-bottom: 40px;
    }

    .my-order-content {
        display: flex;
        flex-direction: column;
        background-color: var(--text-input-field);
        padding: 12px;
        padding-top: 24px;
        border-radius: 20px;
    }

    .order {
        display: grid;
        grid-template-columns: auto 1fr auto;
        gap: 16px;
        align-items: center;
        margin-bottom: 12px;
    }

        .order p:nth-child(1) {
            display: flex;
            flex-direction: column;
        }


        .order p span:nth-child(1) {
            font-weight: bold;
            font-size: var(--md);
            white-space: nowrap;
            width: 300px;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .order p span:nth-child(2) {
            font-weight: var(--sm);
            color: var(--very-light-pink);
        }

        .order div.dropdown {
            text-align: end;
        }

    .search-input {
        margin-bottom: 18px;
    }

    .categories-ipnut {
        margin-bottom: 9px;
    }

    .btns-group {
        margin-bottom: 9px;
    }
</style>
<body class="">
    <div class="my-order">
        <div class="my-order-container">
            <h1 class="title">Products</h1>

            <div class="btns-group">
                <a class="btns btn btn-sm btn-light border border-danger" href="product/create" data-bs-toggle="tooltip" data-bs-placement="top" title="New Product"><i class="text-danger fa-solid fa-plus"></i> NEW</a>
                <a class="btns btn btn-sm btn-light border border-danger" href="storage/create" data-bs-toggle="tooltip" data-bs-placement="top" title="Store Product"><i class="text-danger fa-solid fa-box-open"></i> STORE IN</a>
                <a class="btns btn btn-sm btn-light border border-danger" href="inouts" data-bs-toggle="tooltip" data-bs-placement="top" title="Register an Entry or an Exit"><i class="text-danger fa-solid fa-right-left"></i> IN & OUTS</a>
            </div>

            <EditForm Model="category">
                @*<div class="form-group input-group">*@
                    <InputSelect @bind-Value="category" style="border-radius: 10px;" class="form-select categories-ipnut">
                        <option value="">All products</option>

                        @foreach (var category in categories)
                        {
                            if (category.CategoryName == "afgsdasdf")
                            { }
                            else
                            {
                                <option value="@category.CategoryId">@category.CategoryName (@category.CategoryId)</option>
                            }
                        }
                    </InputSelect>@*
                    <a href="/categories" style="border-radius: 10px;" class="btn btn-danger" id="button-addon1">
                        <i class="fa-solid fa-shapes fa-lg"></i>
                    </a>
                </div>*@
            </EditForm>


            <EditForm Model="search" class="search-input">
                <div class="form-group input-group">
                    <InputText type="search" style="border-radius: 10px; margin-right: 10px;" @bind-Value="search" class="form-control" placeholder="Search..." />
                    <button style="border-radius: 10px;" class="btn btn-danger" type="submit" id="button-addon1">
                        <i class="fa-solid fa-magnifying-glass fa-lg"></i>
                    </button>
                </div>
            </EditForm>

            <div class="my-order-content">
                @foreach (var product in temproducts)
                {
                    if (product.CategoryId.ToLower().Contains(category.ToLower()))
                    {
                        if (product.ProductName.ToLower().Contains(search.ToLower()))
                        {
                            <div class="order justify-content-center">
                                <div>
                                    <p>
                                        <span>@product.ProductName</span>
                                        <span>@product.ProductId</span>
                                    </p>
                                </div>
                                <p></p>
                                <div class="dropdown dropend">
                                    <div type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fa-solid fa-angle-right fa-lg text-danger"></i>
                                    </div>
                                    <ul class="dropdown-menu">
                                        <li><h6 class="dropdown-header">Actions</h6></li>
                                        <li><a class="form-control dropdown-item" href="product/@product.ProductId"><i style="padding-right: 7px;" class="text-primary fa-solid fa-eye text-danger"></i> View</a></li>
                                        <li><a class="form-control dropdown-item" href="product/update/@product.ProductId"><i style="padding-right: 7px;" class="fa-solid fa-pencil text-danger"></i> Edit</a></li>
                                        <li><a class="form-control dropdown-item text-danger" href="product/remove/@product.ProductId"><i style="padding-right: 7px;" class="text-danger fa-solid fa-trash-can"></i> Delete</a></li>
                                    </ul>
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
</body>
@code {
    int numberProducts = 0;
    string search = "";
    string category = "";

    List<Product> products = new List<Product>();
    List<Product> temproducts = new List<Product>();
    List<Category> categories = new List<Category>();

    Product product = new Product();

    protected override async Task OnInitializedAsync()
    {
        products = BsProduct.ProductList();
        temproducts = products;
        categories = BsCategory.CategoryList();
    }

    private void CategoryChange(ChangeEventArgs e)
    {
        temproducts = products.Where(c => c.CategoryId == e.Value.ToString()).ToList();
    }
}
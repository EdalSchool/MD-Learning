@using Entities
@using Business

    <a class="btn btn-success" href="/product/create"><i class="fa-solid fa-plus"></i> Add Product</a>

    <hr/>
    <select class="form-control" @onchange="CategoryChange">
        <option value=""> Selected a category...</option>
    
        @foreach(var category in categories)
        {
            <option value="@category.CategoryId">@category.CategoryName</option>
        }
    </select>
    <hr/>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Reference</th>
                <th>Category</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var product in temproducts)
            {
                <tr>
                    <td>@product.ProductName</td>
                    <td>@product.ProductId</td>
                    <td>@product.CategoryId</td>
                    <td><a class="btn btn-secondary" href="/product/update/@product.ProductId"><i class="fa-solid fa-pen-to-square"></i> Edit</a></td>
                </tr>
            }
        </tbody>
    </table>
    @message

@code {
    List<Product> products = new List<Product>();
    List<Product> temproducts = new List<Product>();
    List<Category> categories = new List<Category>();
    string message;

    protected override async Task OnInitializedAsync()
    {
        products = BsProduct.ProductList();
        temproducts = products;
        categories = BsCategory.CategoryList();
    }

    private void CategoryChange(ChangeEventArgs e)
    {
        //message = e.Value.ToString();
        temproducts = products.Where(c => c.CategoryId == e.Value.ToString()).ToList();
    }
}

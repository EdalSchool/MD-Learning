@using Entities
@using Business
@using System.Linq
@inject NavigationManager NavManager

<title>Manew | Product Creation</title>

<h4><a class="" href=""><i class="text-danger fa-solid fa-angle-left"></i></a> Creating a Product</h4>
<EditForm Model="oProduct" OnValidSubmit=@SaveProduct>
    <DataAnnotationsValidator />

    <div class="row justify-content-center">
        <div class="col-6">
            <div class="form-group">
                <InputText @bind-Value="oProduct.ProductName" class="form-control" id="floatingInput" placeholder="Product name" />
                <ValidationMessage For="() => oProduct.ProductName" />
            </div>
        </div>
        <div class="col-6">
            <div class="form-group">
                <h6 for="ReferenceInput">ID</h6>
                <InputText @bind-Value="oProduct.ProductId" class="form-control" id="ReferenceInput" placeholder="Product ID" />
                <ValidationMessage For="() => oProduct.ProductId" />
            </div>
        </div>
    </div>
    <br />
    <div class="form-group">
        <h6>Product Category</h6>
        <InputSelect @bind-Value="oProduct.CategoryId" class="form-control">

            @if (!categories.Any())
            {
                <option>You have to create a category to create a product</option>
            }
            else
            {
                <option value="">Select...</option>
            }
            @foreach (var category in categories)
            {
                if (category.CategoryName == "afgsdasdf")
                { }
                else
                {
                    <option value="@category.CategoryId">@category.CategoryName (@category.CategoryId)</option>
                }
            }
        </InputSelect>
        <ValidationMessage For="() => oProduct.CategoryId" />
    </div>
    <br />
    <div class="form-group">
        <h6 id="DescriptionInput">Description</h6>
        <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control" id="DescriptionInput" placeholder="Product description" />
        <ValidationMessage For="() => oProduct.ProductDescription" />
    </div>
    <br />
    <button type="submit" class="savebtn btn"><i style="padding-right: 4px;" class="text-success fa-solid fa-check"></i> Save</button>
    <a href="" class="cancelbtn btn"><i style="padding-right: 4px;" class="text-danger fa-solid fa-xmark"></i> Cancel</a>
</EditForm>

@code {
    Product oProduct = new Product();
    List<Product> products = new List<Product>();
    List<Category> categories = new List<Category>();
    string message;

    protected override async Task OnInitializedAsync()
    {
        products = BsProduct.ProductList();
        categories = BsCategory.CategoryList();
    }

    private void SaveProduct()
    {
        var response = BsProduct.ProductCreation(oProduct);
        if (response.IsSuccessfull)
        {
            NavManager.NavigateTo("");
        }
        else
        {
            message = response.ErrorMessage;
        }
    }
}
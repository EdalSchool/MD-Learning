@using Entities
@using Business
@using System.Linq
@inject NavigationManager NavManager

<title>Lucky Luck | Product Creation</title>

<EditForm Model="oProduct" OnValidSubmit=@SaveProduct>
    <DataAnnotationsValidator />
    <label class="text text-danger">@message</label>   
    <div class="form-group">
        <label for="NameInput" >Name:</label>
        <InputText @bind-Value="oProduct.ProductName" class="form-control" id="NameInput" placeholder="Type the name of the new product" />
        <ValidationMessage For="() => oProduct.ProductName" />
    </div>
    <div class="form-group">
        <label  for="ReferenceInput">Id:</label>
        <InputText @bind-Value="oProduct.Reference" class="form-control" id="ReferenceInput" placeholder="Type the product reference" />
        <ValidationMessage For="() => oProduct.Reference" />
    </div>
          
    <div class="form-group">
        <label id="DescriptionInput">Description:</label>
        <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control" id="DescriptionInput" placeholder="Type the product description" />
        <ValidationMessage For="() => oProduct.ProductDescription" />
    </div>
    <div class="form-group">
        <label>Category:</label>
        <InputSelect @bind-Value="oProduct.CategoryId" class="form-control">
            
            @if (! categories.Any() )
        {
            <option>You have to create a category to create a product</option>
        }
        else
        {
            <option value="">Select of what category it's the new product</option>
        }
            @foreach(var category in categories)
            {  
                <option value = "@category.CategoryId">@category.CategoryName</option>
            }
        </InputSelect>
        <ValidationMessage For="() => oProduct.CategoryId" />
    </div>
    <br/>
    <input type="submit" class="btn btn-success" value="Add" />
</EditForm>

@code {
    Product oProduct = new Product();
    List<Product> products = new List<Product>();
    List<Category> categories = new List<Category>();
    string message = "The Reference field cannot contain a \"-\" sign or numbers. If you type it just refresh the browser.";

    protected override async Task OnInitializedAsync()
    {
        products = BsProduct.ProductList();
        categories = BsCategory.CategoryList();
    }

    private void SaveProduct()
    {   
        BsProduct.ProductCreation(oProduct);
        NavManager.NavigateTo("");
    }
}